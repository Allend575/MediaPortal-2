<?xml version="1.0" encoding="utf-8"?>

<!--
This is the master template for standard menu screens:
A header text, left the menu, under the menu a small video preview,
at the right side the content pane and at the bottom the current play control.

Usage:

  <Include
      xmlns="www.team-mediaportal.com/2008/mpf/directx"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      Source="screens\master_menu.xaml">
    <Include.Resources>
      <ResourceWrapper x:Key="Header_Text">
        [Header text]
      </ResourceWrapper>
      <ControlTemplate x:Key="Contents_Template">
        [UI element to be displayed in the content area]
      </ControlTemplate>
    </Include.Resources>
  </Include>

Parameters which have to be accessible by a DynamicResource lookup:
 - Header_Text (String): The text to be displayed as header
 - Contents_Template (ConrolTemplate): Template for element to be displayed
   in the content area at the right side
-->

<Include
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Source="screens\master_home.xaml"
    xmlns:mp_special_controls="clr-namespace:MediaPortal.UI.SkinEngine.SpecialElements.Controls;assembly=SkinEngine"
    xmlns:wmc="clr-namespace:MediaPortal.UiComponents.Nereus.Controls;assembly=Nereus"
    xmlns:wmc_markup_extensions="clr-namespace:MediaPortal.UiComponents.Nereus.MarkupExtensions;assembly=Nereus"
    >
  <Include.Resources>

    <!-- Background Manager for menu hovers -->
    <Model x:Key="BackgroundManagerModel" Id="1F4CAEDE-7108-483d-B5C8-18BEC7EC58E5"/>
    <Model x:Key="HomeMenuModel" Id="8AA7C126-DCCB-4DC7-AB17-34BF0C368F6D"/>
    <Model x:Key="HomeContentModel" Id="93F2124B-08A3-4FC0-AA7D-7709A65F8240"/>
    <Model x:Key="MouseModel" Id="CA6428A7-A6E2-4dd3-9661-F89CEBAF8E62"/>
    <Model x:Key="MenuModel" Id="9E9D0CD9-4FDB-4c0f-A0C4-F356E151BDE0"/>
    
    <!-- Client_Template -->
    <ControlTemplate x:Key="Client_Template">
      <Grid x:Name="MainLayoutPanel" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,-110,0,-5">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="200"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.RenderTransform>
          <TranslateTransform X="0"/>
        </Grid.RenderTransform>

        <!--Slide content in and out depending on hidden menu state-->
        <Grid.Triggers>
          <DataTrigger Binding="{Binding Source={StaticResource MenuModel},Path=IsMenuOpen}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard x:Name="SlideIn">
                <BeginStoryboard.Storyboard>
                  <Storyboard>
                    <DoubleAnimation
                           Storyboard.TargetName="MainLayoutPanel"
                           Storyboard.TargetProperty="RenderTransform.X"
                           From="-200" To="0" BeginTime="0:0:0" Duration="00:00:00.35"
                           FillBehavior="HoldEnd"/>
                  </Storyboard>
                </BeginStoryboard.Storyboard>
              </BeginStoryboard>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard x:Name="SlideOut">
                <BeginStoryboard.Storyboard>
                  <Storyboard>
                    <DoubleAnimation
                           Storyboard.TargetName="MainLayoutPanel"
                           Storyboard.TargetProperty="RenderTransform.X"
                           From="0" To="-200" BeginTime="0:0:0" Duration="00:00:00.35"
                           FillBehavior="HoldEnd"/>
                  </Storyboard>
                </BeginStoryboard.Storyboard>
              </BeginStoryboard>
              <StopStoryboard BeginStoryboardName="SlideIn"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Grid.Triggers>

        <Grid Width="200" VerticalAlignment="Stretch">
          <Grid.Triggers>
            <!--Open the menu when the grid gets focus-->
            <EventTrigger RoutedEvent="FrameworkElement.GotFocus">
              <TriggerCommand Command="{Command Source={StaticResource MenuModel}, Path=OpenMenu}"/>
            </EventTrigger>
          </Grid.Triggers>
          <Rectangle Fill="Black" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0.9"/>
          <Image Source="LeftMenuIndicator.PNG" HorizontalAlignment="Right" Stretch="Fill" Width="25" Height="45" 
                 Opacity="0.9" VerticalAlignment="Center" Margin="0,0,-25,0"/>

          <ListView x:Name="MainMenu" Style="{ThemeResource HomeMenuListViewStyle}" RestoreFocus="True" Height="1200"
                    HorizontalAlignment="Center" VerticalAlignment="Stretch" SetFocusPrio="DefaultHigh"
                    ItemsSource="{Binding Source={StaticResource MenuModel},Path=MenuItems,Mode=OneTime,Converter={StaticResource IncludeItemsListActionFilter},ConverterParameter={StaticResource ActionIdFilter}}">
            <ListView.Resources>
              <CommandBridge x:Key="Menu_Command" Command="{Binding Path=Command,Mode=OneTime}"/>
            </ListView.Resources>
          </ListView>
        </Grid>

        <Grid x:Name="ContentView" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Stretch">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="100"/>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>

          <Grid.Triggers>
            <!--Close the hidden menu when the main content gets focus-->
            <EventTrigger RoutedEvent="FrameworkElement.GotFocus">
              <TriggerCommand Command="{Command Source={StaticResource MenuModel}, Path=CloseMenu}"/>
            </EventTrigger>
          </Grid.Triggers>

          <!-- Top Gradient Overlay-->
          <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderThickness="0" Margin="0,0,-30,0">
            <Border.Background>
              <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Color="#E6000000" Offset="0" />
                <GradientStop Color="#00000000" Offset="1" />
              </LinearGradientBrush>
            </Border.Background>
          </Border>

          <!-- Bottom Gradient Overlay-->
          <Border Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" BorderThickness="0" Margin="0,0,-30,0" Height="100">
            <Border.Background>
              <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Color="#00000000" Offset="0" />
                <GradientStop Color="#E6000000" Offset="1" />
              </LinearGradientBrush>
            </Border.Background>
          </Border>

          <!-- Time Label -->
          <Grid HorizontalAlignment="Right" Margin="0,25,25,0">
            <Grid.Resources>
              <Model x:Key="TimeModel" Id="E821B1C8-0666-4339-8027-AA45A4F6F107"/>
            </Grid.Resources>
            <Label Content="{Binding Source={StaticResource TimeModel}, Path=CurrentTime}" FontSize="{ThemeResource NormalFontSize}" 
                   Color="{ThemeResource TextColor}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
          </Grid>

          <!--Grid x:Name="ContentMediaItemView" Grid.Row="1">
            <StackPanel Orientation="Horizontal">
              <ListView Margin="20,0,0,0" x:Name="SubItemsListViewHome"
                     SetFocusPrio="DefaultHigh" Style="{ThemeResource HomeMenuListViewStyle}"
                     ItemsSource="{Binding Source={StaticResource HomeMenuModel},Path=SubItems,Mode=OneTime}"
                     SelectionChanged="{CommandStencil Source={StaticResource HomeMenuModel}, Path=SetSelectedItem}">
                <ListView.Resources>
                  <CommandBridge x:Key="Menu_Command" Command="{Binding Path=Command,Mode=OneTime}"/>
                </ListView.Resources>
              </ListView>
            </StackPanel>
          </-->

          <!-- Home Content -->
          <Grid x:Name="HomeContentGrid" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="1700"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="880"/>
            </Grid.RowDefinitions>

            <Grid.Resources>
              <!-- HomeContent Storyboard -->
              <Storyboard x:Key="SlideInStoryboard" FillBehavior="HoldEnd">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetProperty="RenderTransform.X">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.5" Value="500"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.6" Value="256"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.7" Value="131"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.8" Value="67"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.9" Value="34"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:01.0" Value="17"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:01.1" Value="8"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:01.2" Value="4"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:01.3" Value="1"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:01.4" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetProperty="Opacity">
                  <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.5" Value="0"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:01.40" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SlideOutStoryboard" FillBehavior="Stop">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetProperty="RenderTransform.X">
                  <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.1" Value="1"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.2" Value="4"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.3" Value="8"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.4" Value="17"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.5" Value="34"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.6" Value="67"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.7" Value="131"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.8" Value="256"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.9" Value="500"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetProperty="Opacity">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.0" Value="1"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.9" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </Grid.Resources>

            <!-- To allow the next home content to slide in whilst the previous slides out we use the HomeContentModel
               To alternate the content between HomeContent0Control and HomeContent1Control below -->

            <!-- Home Content 0 -->
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid.RenderTransform>
                <TranslateTransform X="1700"/>
              </Grid.RenderTransform>
              <Grid.Triggers>
                <!-- Trigger for the HomeContent Storyboard -->
                <DataTrigger Binding="{Binding Source={StaticResource HomeContentModel},Path=CurrentContentIndex}" Value="0">
                  <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="Content0BeginSlideInStoryboard" Storyboard="{StaticResource SlideInStoryboard}"/>
                  </DataTrigger.EnterActions>
                  <DataTrigger.ExitActions>
                    <BeginStoryboard x:Name="Content0BeginSlideOutStoryboard" Storyboard="{StaticResource SlideOutStoryboard}"/>
                    <StopStoryboard BeginStoryboardName="Content0BeginSlideInStoryboard"/>
                  </DataTrigger.ExitActions>
                </DataTrigger>
              </Grid.Triggers>
              <Control x:Name="HomeContent0Control" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                   Template="{wmc_markup_extensions:DynamicResourceBindingExtension ResourceKey={Binding Source={StaticResource HomeContentModel}, Path=Content0ActionId}}"/>
            </Grid>

            <!-- Home Content 1 -->
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid.RenderTransform>
                <TranslateTransform X="1700"/>
              </Grid.RenderTransform>
              <Grid.Triggers>
                <!-- Trigger for the HomeContent Storyboard -->
                <DataTrigger Binding="{Binding Source={StaticResource HomeContentModel},Path=CurrentContentIndex}" Value="1">
                  <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="Content1BeginSlideInStoryboard" Storyboard="{StaticResource SlideInStoryboard}"/>
                  </DataTrigger.EnterActions>
                  <DataTrigger.ExitActions>
                    <BeginStoryboard x:Name="Content1BeginSlideOutStoryboard" Storyboard="{StaticResource SlideOutStoryboard}"/>
                    <StopStoryboard BeginStoryboardName="Content1BeginSlideInStoryboard"/>
                  </DataTrigger.ExitActions>
                </DataTrigger>
              </Grid.Triggers>
              <Control x:Name="HomeContent1Control" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                   Template="{wmc_markup_extensions:DynamicResourceBindingExtension ResourceKey={Binding Source={StaticResource HomeContentModel}, Path=Content1ActionId}}"/>
            </Grid>
            
          </Grid>
        </Grid>

        <!-- Order matters here: The content grid has to be the last control to fill the rest of the space -->
        <!--Grid x:Name="ContentPanel" Grid.Row="2" Grid.Column="0" SetFocusPrio="Default">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <Control Margin="10,0,10,10" x:Name="ContentViewer" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Template="{DynamicResource ResourceKey=Contents_Template}" SetFocus="true"/>
        </Grid-->

        <!--Control Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="-200,-50,0,0" Width="500">
          <Control.TemplateControl>
            <Include Source="screens\MultiDetailsHome.inc"/>
          </Control.TemplateControl>
        </-->
   
      </Grid>
    </ControlTemplate>
  </Include.Resources>
</Include>
