<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="RestoreAllPackages" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--
  This file contains MSBuild code to download all the NuGet packages for the repository before
  actual opening and compiling a *.csproj file.
  -->
  <Import Project="$(MSBuildThisFileDirectory)\Build.tasks" />

  <PropertyGroup>
    <ProjectRoot Condition="$(ProjectRoot) == ''">$(MSBuildThisFileDirectory)\..</ProjectRoot>
    <NuGetExePath Condition="$(NuGetExePath) == ''">$(MSBuildThisFileDirectory)\NuGet.exe</NuGetExePath>
  </PropertyGroup>

  <ItemGroup>
    <PackagesConfigs Include="$(ProjectRoot)\**\packages.config" />
  </ItemGroup>

  <Target Name="DownloadNuGet">
    <DownloadFile DownloadAddress="https://nuget.org/nuget.exe" OutputFilename="$(NuGetExePath)" Condition="!Exists('$(NuGetExePath)')" />
  </Target>
  
  <Target Name="RestoreDnx">
    <Exec Command="dnvm upgrade -r clr"/>
    <Exec Command="dnvm exec default dnu restore -s https://www.myget.org/F/aspnetvnext/ -f https://www.nuget.org/api/v2/ -f http://www.myget.org/F/mediaportal/"
		WorkingDirectory="../Source/"/>
  </Target>

  <Target Name="RestoreAllPackages"
          DependsOnTargets="DownloadNuGet;RestoreDnx">

    <Message Text="Found the following 'packages.config'-files: @(PackagesConfigs->'%(FullPath)')"/>

    <Exec Command='"$(NuGetExePath)" install "%(PackagesConfigs.FullPath)"'/>
  </Target>

  <!--
  This target downloads only the packages that are required for launching the BuildProcess.
  Such dependencies might be BuildReport or other MSBuild tasks that provide additional features.
  -->
  <Target Name="RestoreBuildPackages"
          DependsOnTargets="DownloadNuGet">
    <Exec Command='"$(NuGetExePath)" install "$(MSBuildThisFileDirectory)\packages.config"'/>
  </Target>
</Project>