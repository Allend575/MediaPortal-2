<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:collections="clr-namespace:MediaPortal.UI.Presentation.DataObjects;assembly=MediaPortal.UI"
    xmlns:navitems="clr-namespace:MediaPortal.UiComponents.Media.Models.Navigation;assembly=Media"
    xmlns:mp_special_controls="clr-namespace:MediaPortal.UI.SkinEngine.SpecialElements.Controls"
    DependsOnStyleResources="OSD,FullScreenContentConsts,MediaButtons,MediaColors,MediaConsts,Consts,Colors,Buttons,OtherControls,Widgets"
    >

  <!-- ***************************************** OSD ************************************************** -->
  <Storyboard x:Key="OSDCurrentPlayerControlStoryboard" FillBehavior="Stop">
    <!-- TODO: nicer background cycle effect -->
    <ColorAnimationUsingKeyFrames RepeatBehavior="Forever" AutoReverse="true" BeginTime="00:00:00"
        Storyboard.TargetName="OSDInfoArea" Storyboard.TargetProperty="Fill.GradientStops[0].Color">
      <SplineColorKeyFrame KeyTime="00:00:00" Value="{ThemeResource OSDCurrentPlayerControlBackgroundColor1}"/>
    </ColorAnimationUsingKeyFrames>
    <!--<ColorAnimationUsingKeyFrames RepeatBehavior="Forever" AutoReverse="true" BeginTime="00:00:00"
        Storyboard.TargetName="OSDInfoArea" Storyboard.TargetProperty="Fill.GradientStops[1].Color">
      <SplineColorKeyFrame KeyTime="00:00:00" Value="{ThemeResource OSDCurrentPlayerControlBackgroundColor2}"/>
    </ColorAnimationUsingKeyFrames>
    <ColorAnimationUsingKeyFrames RepeatBehavior="Forever" AutoReverse="true" BeginTime="00:00:00"
        Storyboard.TargetName="OSDInfoArea" Storyboard.TargetProperty="Fill.GradientStops[2].Color">
      <SplineColorKeyFrame KeyTime="00:00:00" Value="{ThemeResource OSDCurrentPlayerControlBackgroundColor3}"/>
    </ColorAnimationUsingKeyFrames>-->
  </Storyboard>

  <Style x:Key="PrimaryVideoOSDStyle" TargetType="{x:Type mp_special_controls:PlayerControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mp_special_controls:PlayerControl}">
          <ControlTemplate.Resources>
            <Model x:Key="VideoPlayerModel" Id="4E2301B4-3C17-4a1d-8DE5-2CEA169A0256"/>
          </ControlTemplate.Resources>

          <Control Style="{ThemeResource OSDContainer}" Width="800" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                   Margin="10">
            <Control.Resources>
              <ControlTemplate x:Key="OSD_InfoArea_Template">

                <Grid x:Name="PlayerGrid" Margin="10,0,10,0"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <DockPanel Grid.Column="0" Grid.Row="0" LastChildFill="true" Margin="3">
                    <Grid x:Name="AudioPanel" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="4,0,0,0">
                      <Grid x:Name="Audio_NoMouse" IsVisible="{Binding !ShowMouseControls}"
                      VerticalAlignment="Center" HorizontalAlignment="Center">
                        <!-- Must be located the same as Audio_Mouse -->
                        <Control x:Name="AudioSimple" IsVisible="{Binding IsAudio}" Template="{ThemeResource AudioActiveControlTemplate}"/>
                        <Control x:Name="MuteOnOffSimple" Template="{ThemeResource MuteOnOffControlTemplate}">
                          <Control.IsVisible>
                            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} &amp;&amp; {1}">
                              <Binding Path="IsAudio"/>
                              <Binding Path="IsMuted"/>
                            </MultiBinding>
                          </Control.IsVisible>
                        </Control>
                      </Grid>
                      <Grid x:Name="Audio_Mouse" IsVisible="{Binding ShowMouseControls}"
                      VerticalAlignment="Center" HorizontalAlignment="Center">
                        <!-- Must be located the same as Audio_NoMouse -->
                        <Button x:Name="AudioActiveButton" IsVisible="{Binding IsAudio}" Style="{ThemeResource AudioActiveButtonStyle}"
                        Command="{Command AudioButtonPressed}"/>
                        <Button x:Name="AudioInactiveButton" IsVisible="{Binding !IsAudio}" Style="{ThemeResource AudioInactiveButtonStyle}"
                        Command="{Command AudioButtonPressed}"/>
                      </Grid>
                    </Grid>
                    <Grid DockPanel.Dock="Center">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                      </Grid.RowDefinitions>
                      <Label x:Name="VideoName" Content="{Binding Path=MediaItemTitle}" Color="{ThemeResource TextColor}"
                          Scroll="Auto" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Grid>
                  </DockPanel>
                </Grid>
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_ProgressAndControls_Template">

                <DockPanel LastChildFill="true" Margin="3">
                  <Grid DockPanel.Dock="Center" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="80"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="80"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Label x:Name="CurrentTimeLabel" Grid.Column="0" Grid.Row="0"  Content="{Binding CurrentTime}"
                        Color="{ThemeResource TextColor}"
                        FontSize="{ThemeResource SmallFontSize}"/>

                    <Border x:Name="BgProgressbar" Grid.Row="0" Grid.Column="1"
                      HorizontalAlignment="Stretch" VerticalAlignment="Center"
                      BorderBrush="Black" CornerRadius="2" BorderThickness="1">
                      <Border.Background>
                        <RadialGradientBrush Center="0.5,-0" GradientOrigin="0.5,0" RadiusX="0.9" RadiusY="0.5">
                          <GradientStop Offset="0" Color="{ThemeResource OSDProgressBarBackgroundGradient1Color}"/>
                          <GradientStop Offset="1" Color="{ThemeResource OSDProgressBarBackgroundGradient2Color}"/>
                        </RadialGradientBrush>
                      </Border.Background>
                      <ProgressBar x:Name="ProgressBar" Height="10" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                        Value="{Binding Path=PercentPlayed}"/>
                    </Border>

                    <Label x:Name="VideoDurationLabel" Grid.Column="2" Grid.Row="0" 
                        Content="{Binding Duration}" 
                        HorizontalAlignment="Right" VerticalAlignment="Center"
                        Color="{ThemeResource TextColor}"
                        FontSize="{ThemeResource SmallFontSize}"/>


                    <Label x:Name="PlayerStateLabel" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left"
                        Content="{Binding PlayerStateText}" Scroll="Auto"
                        Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>

                    <StackPanel x:Name="PlayControlsPanel" Orientation="Horizontal" Grid.Column="1" Grid.Row="1" Margin="0"
                        VerticalAlignment="Center" HorizontalAlignment="Center" IsVisible="{Binding ShowMouseControls}" >
                      <Button x:Name="SkipBackButton" Style="{ThemeResource SkipBackButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSkipBack}"
                          Command="{Command Previous}"/>
                      <Button x:Name="RewindButton" Style="{ThemeResource RewindButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSeekBackward}"
                          Command="{Command SeekBackward}"/>
                      <Button x:Name="PlayButton" Style="{ThemeResource PlayButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPlay}"
                          Command="{Command Play}"/>
                      <Button x:Name="PauseButton" Style="{ThemeResource PauseButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPause}"
                          Command="{Command Pause}"/>
                      <Button x:Name="StopButton" Style="{ThemeResource StopButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanStop}"
                          Command="{Command Stop}"/>
                      <Button x:Name="ForwardButton" Style="{ThemeResource ForwardButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSeekForward}"
                          Command="{Command SeekForward}"/>
                      <Button x:Name="SkipForwardButton" Style="{ThemeResource SkipForwardButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSkipForward}"
                          Command="{Command Next}"/>
                      <Button x:Name="SelectSubtitleButton" Style="{ThemeResource SelectSubtitleButtonStyle}" Margin="5,0,5,0"
                          IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.SubtitlesAvailable}"
                          Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.OpenChooseSubtitleDialog}"/>

                    </StackPanel>
                    <!-- PlayControlsPanel -->
                  </Grid>
                  <!-- PlayerGrid -->
                </DockPanel>
              </ControlTemplate>
            </Control.Resources>
          </Control>
          <ControlTemplate.Triggers>
            <Trigger Property="IsCurrentPlayer" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="CurrentPlayer_BeginStoryboard" Storyboard="{ThemeResource OSDCurrentPlayerControlStoryboard}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="CurrentPlayer_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="PlayerContext" Value="PrimaryPlayer"/>
  </Style>

  <Style x:Key="PrimaryDvdOSDStyle" TargetType="{x:Type mp_special_controls:PlayerControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mp_special_controls:PlayerControl}">
          <ControlTemplate.Resources>
            <Model x:Key="VideoPlayerModel" Id="4E2301B4-3C17-4a1d-8DE5-2CEA169A0256"/>
          </ControlTemplate.Resources>

          <Control Style="{ThemeResource OSDContainer}" Width="800" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                   Margin="10">
            <Control.Resources>
              <ControlTemplate x:Key="OSD_InfoArea_Template">

                <Grid x:Name="PlayerGrid" Margin="10,0,10,0"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <DockPanel Grid.Column="0" Grid.Row="0" LastChildFill="true" Margin="3">
                    <Grid x:Name="AudioPanel" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="4,0,0,0">
                      <Grid x:Name="Audio_NoMouse" IsVisible="{Binding !ShowMouseControls}"
                      VerticalAlignment="Center" HorizontalAlignment="Center">
                        <!-- Must be located the same as Audio_Mouse -->
                        <Control x:Name="AudioSimple" IsVisible="{Binding IsAudio}" Template="{ThemeResource AudioActiveControlTemplate}"/>
                        <Control x:Name="MuteOnOffSimple" Template="{ThemeResource MuteOnOffControlTemplate}">
                          <Control.IsVisible>
                            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} &amp;&amp; {1}">
                              <Binding Path="IsAudio"/>
                              <Binding Path="IsMuted"/>
                            </MultiBinding>
                          </Control.IsVisible>
                        </Control>
                      </Grid>
                      <Grid x:Name="Audio_Mouse" IsVisible="{Binding ShowMouseControls}"
                      VerticalAlignment="Center" HorizontalAlignment="Center">
                        <!-- Must be located the same as Audio_NoMouse -->
                        <Button x:Name="AudioActiveButton" IsVisible="{Binding IsAudio}" Style="{ThemeResource AudioActiveButtonStyle}"
                        Command="{Command AudioButtonPressed}"/>
                        <Button x:Name="AudioInactiveButton" IsVisible="{Binding !IsAudio}" Style="{ThemeResource AudioInactiveButtonStyle}"
                        Command="{Command AudioButtonPressed}"/>
                      </Grid>
                    </Grid>
                    <Grid DockPanel.Dock="Center">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                      </Grid.RowDefinitions>
                      <Label x:Name="VideoName" Content="{Binding Path=MediaItemTitle}" Color="{ThemeResource TextColor}"
                          Scroll="Auto" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Grid>
                  </DockPanel>
                </Grid>
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_ProgressAndControls_Template">

                <DockPanel LastChildFill="true" Margin="3">
                  <Grid DockPanel.Dock="Center" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="80"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="80"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Label x:Name="CurrentTimeLabel" Grid.Column="0" Grid.Row="0"  Content="{Binding CurrentTime}"
                        Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>

                    <Border x:Name="BgProgressbar" Grid.Row="0" Grid.Column="1"
                      HorizontalAlignment="Stretch" VerticalAlignment="Center"
                      BorderBrush="Black" CornerRadius="2" BorderThickness="1">
                      <Border.Background>
                        <RadialGradientBrush Center="0.5,-0" GradientOrigin="0.5,0" RadiusX="0.9" RadiusY="0.5">
                          <GradientStop Offset="0" Color="{ThemeResource OSDProgressBarBackgroundGradient1Color}"/>
                          <GradientStop Offset="1" Color="{ThemeResource OSDProgressBarBackgroundGradient2Color}"/>
                        </RadialGradientBrush>
                      </Border.Background>
                      <ProgressBar x:Name="ProgressBar" Height="10" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                        Value="{Binding Path=PercentPlayed}"/>
                    </Border>

                    <Label x:Name="VideoDurationLabel" Grid.Column="2" Grid.Row="0" 
                        Content="{Binding Duration}" 
                        HorizontalAlignment="Right" VerticalAlignment="Center"
                        Color="{ThemeResource TextColor}"
                        FontSize="{ThemeResource SmallFontSize}"/>


                    <Label x:Name="PlayerStateLabel" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left"
                        Content="{Binding PlayerStateText}" Scroll="Auto"
                        Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>

                    <StackPanel x:Name="PlayControlsPanel" Orientation="Horizontal" Grid.Column="1" Grid.Row="1" Margin="0"
                  VerticalAlignment="Center" HorizontalAlignment="Center" IsVisible="{Binding ShowMouseControls}" >
                      <Button x:Name="SkipBackButton" Style="{ThemeResource SkipBackButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSkipBack}"
                    Command="{Command Previous}"/>
                      <Button x:Name="RewindButton" Style="{ThemeResource RewindButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSeekBackward}"
                    Command="{Command SeekBackward}"/>
                      <Button x:Name="PlayButton" Style="{ThemeResource PlayButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPlay}"
                    Command="{Command Play}"/>
                      <Button x:Name="PauseButton" Style="{ThemeResource PauseButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPause}"
                    Command="{Command Pause}"/>
                      <Button x:Name="StopButton" Style="{ThemeResource StopButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanStop}"
                    Command="{Command Stop}"/>
                      <Button x:Name="ForwardButton" Style="{ThemeResource ForwardButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSeekForward}"
                    Command="{Command SeekForward}"/>
                      <Button x:Name="SkipForwardButton" Style="{ThemeResource SkipForwardButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSkipForward}"
                    Command="{Command Next}"/>

                      <!-- DVD specific feature buttons -->
                      <StackPanel x:Name="DvdButtons" Orientation="Horizontal" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    DataContext="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor}">
                        <Button x:Name="ShowDvdMenuButton" Style="{ThemeResource ShowDvdMenuButtonStyle}" Margin="5,0,5,0" 
                      Command="{Command ShowDvdMenu}"/>
                        <Button x:Name="PreviousChapterButton" Style="{ThemeResource PreviousChapterButtonStyle}" Margin="5,0,5,0" 
                      IsVisible="{Binding ChaptersAvailable}"
                      Command="{Command PrevChapter}"/>
                        <Button x:Name="SelectChapterButton" Style="{ThemeResource SelectChapterButtonStyle}" Margin="5,0,5,0" 
                      IsVisible="{Binding ChaptersAvailable}"
                      Command="{Command OpenChooseChapterDialog}"/>
                        <Button x:Name="NextChapterButton" Style="{ThemeResource NextChapterButtonStyle}" Margin="5,0,5,0" 
                      IsVisible="{Binding ChaptersAvailable}"
                      Command="{Command NextChapter}"/>
                        <Button x:Name="SelectSubtitleButton" Style="{ThemeResource SelectSubtitleButtonStyle}" Margin="5,0,5,0" 
                      IsVisible="{Binding SubtitlesAvailable}"
                      Command="{Command OpenChooseSubtitleDialog}"/>
                      </StackPanel>
                      <!-- DvdButtons -->

                    </StackPanel>
                    <!-- PlayControlsPanel -->
                  </Grid>
                  <!-- PlayerGrid -->
                </DockPanel>
              </ControlTemplate>
            </Control.Resources>
          </Control>
          <ControlTemplate.Triggers>
            <Trigger Property="IsCurrentPlayer" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="CurrentPlayer_BeginStoryboard" Storyboard="{ThemeResource OSDCurrentPlayerControlStoryboard}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="CurrentPlayer_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="PlayerContext" Value="PrimaryPlayer"/>
  </Style>


  <Style x:Key="PrimaryPictureOSDStyle" TargetType="{x:Type mp_special_controls:PlayerControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mp_special_controls:PlayerControl}">

          <Control Style="{ThemeResource OSDContainer}" Width="500" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                   Margin="10">
            <Control.Resources>
              <ControlTemplate x:Key="OSD_InfoArea_Template">

                <DockPanel x:Name="HeadLine" Grid.Row="0" Grid.Column="0" LastChildFill="True">
                  <Grid x:Name="PlayerStatePanel" DockPanel.Dock="Left">
                    <Control x:Name="StatePlay" IsVisible="{Binding IsPlaying}" Template="{ThemeResource PlayControlTemplate}"
                      VerticalAlignment="Center"/>
                    <Control x:Name="StatePause" IsVisible="{Binding IsPaused}" Template="{ThemeResource PauseControlTemplate}"
                      VerticalAlignment="Center"/>
                  </Grid>
                  <!-- PlayerStatePanel -->
                  <Label x:Name="PictureName" DockPanel.Dock="Center" Margin="3" Content="{Binding Path=MediaItemTitle}" Scroll="Auto"
                    Color="{ThemeResource TextColor}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                </DockPanel>
                <!-- HeadLine -->
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_ProgressAndControls_Template">
                <StackPanel x:Name="PlayControlsPanel" Orientation="Horizontal" Grid.Column="0" Grid.Row="1" Margin="10,10,10,0"
                  IsVisible="{Binding ShowMouseControls}" >
                  <Button x:Name="SkipBackButton" Style="{ThemeResource SkipBackButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSkipBack}"
                    Command="{Command Previous}"/>
                  <Button x:Name="PlayButton" Style="{ThemeResource PlayButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPlay}"
                    Command="{Command Play}"/>
                  <Button x:Name="PauseButton" Style="{ThemeResource PauseButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPause}"
                    Command="{Command Pause}"/>
                  <Button x:Name="StopButton" Style="{ThemeResource StopButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanStop}"
                    Command="{Command Stop}"/>
                  <Button x:Name="SkipForwardButton" Style="{ThemeResource SkipForwardButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSkipForward}"
                    Command="{Command Next}"/>
                </StackPanel>
                <!-- PlayControlsPanel -->
              </ControlTemplate>
              <!-- PlayerGrid -->
            </Control.Resources>
          </Control>
          <ControlTemplate.Triggers>
            <Trigger Property="IsCurrentPlayer" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="CurrentPlayer_BeginStoryboard" Storyboard="{ThemeResource OSDCurrentPlayerControlStoryboard}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="CurrentPlayer_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="PlayerContext" Value="PrimaryPlayer"/>
  </Style>

  <!-- 
    Media Navigation styles.
    We provide different control styles for thumbnail list and grid views for each navigation item (filter, audio, video,...).
  -->
  <Model x:Key="ViewModeModel" Id="6997CD35-63F0-4F96-8997-E18C9382E2DC"/>

  <!-- Fallback data template, if data template for actual item type is not defined -->
  <DataTemplate DataType="{x:Type navitems:NavigationItem}">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Label x:Name="ItemLabel" Grid.Column="0" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Label x:Name="NumItems" Grid.Column="1" Content="{Binding NumItems}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
    </Grid>
  </DataTemplate>

  <!-- Filter -->
  <ControlTemplate x:Key="ListViewFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="0,0,4,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform"
            Source="FilterSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform"
            Source="FilterSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform"
            Source="FilterLarge.png" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Label x:Name="NumItems" Grid.Row="0" Grid.Column="2" Content="{Binding NumItems}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="180"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="110"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Image x:Name="ItemTypeImage" Grid.Row="0" Grid.Column="0" Stretch="Uniform" Margin="0,0,0,0" Source="FilterLarge.png"
           Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}"/>
      <Label x:Name="ItemLabel" Grid.Row="1" Grid.Column="0" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
    </Grid>
  </ControlTemplate>

  <!-- Container -->
  <ControlTemplate x:Key="ListViewContainerItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="0,0,4,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform"
            Source="NavigationSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform"
            Source="NavigationSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform"
            Source="NavigationLarge.png" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Label x:Name="NumItems" Grid.Row="0" Grid.Column="2" Content="{Binding NumItems}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewContainerItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="180"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="110"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Image x:Name="ItemTypeImage" Grid.Row="0" Stretch="Uniform" Source="NavigationLarge.png"
           Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}"/>
      <Label x:Name="ItemLabel" Grid.Row="1" Content="{Binding SimpleTitle}" Color="{ThemeResource TextColor}"
           FontSize="{ThemeResource SmallFontSize}" HorizontalAlignment="Center"/>
    </Grid>
  </ControlTemplate>

  <!-- Movie -->
  <ControlTemplate x:Key="ListViewMovieItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="0,0,4,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform"
            Source="{Binding MediaItem}" FallbackSource="MovieSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform"
            Source="{Binding MediaItem}" FallbackSource="MovieSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform"
            Source="{Binding MediaItem}" FallbackSource="MovieLarge.png" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Label x:Name="Duration" Grid.Row="0" Grid.Column="2" Content="{Binding Duration}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Grid x:Name="Details" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Stretch">
        <Grid.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} != {LayoutSize}.{Small}"/>
        </Grid.IsVisible>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="200"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="200"/>
        </Grid.ColumnDefinitions>
        <Label x:Name="VideoEncodingTitle" Grid.Column="0" Content="Video: " FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
        <Label x:Name="VideoEncoding" Grid.Column="1" Content="{Binding VideoEncoding}" FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
        <Label x:Name="AudioEncodingTitle" Grid.Column="2" Content="Audio: " FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
        <Label x:Name="AudioEncoding" Grid.Column="3" Content="{Binding AudioEncoding}" FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
      </Grid>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewMovieItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="180"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="110"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Image x:Name="ItemTypeImage" Grid.Row="0" Stretch="Uniform" Source="{Binding MediaItem}"
           Thumbnail="True" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}"
           FallbackSource="MovieLarge.png"/>
      <Label x:Name="ItemLabel" Grid.Row="1" Content="{Binding SimpleTitle}" FontSize="{ThemeResource SmallFontSize}"
           Color="{ThemeResource TextColor}" HorizontalAlignment="Center"/>
    </Grid>
  </ControlTemplate>

  <!-- Music -->
  <ControlTemplate x:Key="ListViewMusicItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="0" Margin="0,0,4,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform"
            Source="MusicSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform"
            Source="MusicSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform"
            Source="MusicLarge.png" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Column="1" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Label x:Name="Duration" Grid.Column="2" Content="{Binding Duration}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewMusicItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="180"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="110"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Image x:Name="ItemTypeImage" Grid.Row="0" Stretch="Uniform" Source="MusicLarge.png"
           Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}"/>
      <Label x:Name="ItemLabel" Grid.Row="1" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"
          HorizontalAlignment="Center"/>
    </Grid>
  </ControlTemplate>

  <!-- Picture -->
  <ControlTemplate x:Key="ListViewPictureItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="0,0,4,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform"
            Source="{Binding MediaItem}" FallbackSource="PictureSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform"
            Source="{Binding MediaItem}" FallbackSource="PictureSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform"
            Source="{Binding MediaItem}" FallbackSource="PictureLarge.png" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Label x:Name="Size" Grid.Row="0" Grid.Column="2" Content="{Binding Size}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Grid x:Name="Details" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Stretch">
        <Grid.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} != {LayoutSize}.{Small}"/>
        </Grid.IsVisible>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="200"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="200"/>
        </Grid.ColumnDefinitions>
        <Label x:Name="FileTypeTitle" Grid.Column="0" Content="File type: " FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
        <Label x:Name="FileType" Grid.Column="1" Content="{Binding Extension}" FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
        <Label x:Name="MimeTypeTitle" Grid.Column="2" Content="Mime type: " FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
        <Label x:Name="MimeType" Grid.Column="3" Content="{Binding MimeType}" FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
      </Grid>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewPictureItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="180"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="110"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <!-- For grid layout, we only support large layout size -->
      <Image x:Name="ItemTypeImage" Grid.Row="0" Stretch="Uniform" Source="{Binding MediaItem}"
           Thumbnail="True" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}"
           FallbackSource="PictureLarge.png"/>
      <Label x:Name="ItemLabel" Grid.Row="1" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"
          HorizontalAlignment="Center"/>
    </Grid>
  </ControlTemplate>

  <!-- Specific media navigation data templates -->
  <DataTemplate DataType="{x:Type navitems:ContainerItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : {2}">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewContainerItemTemplate}"/>
          <Binding Source="{StaticResource GridViewContainerItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:FilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : {2}">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewFilterItemTemplate}"/>
          <Binding Source="{StaticResource GridViewFilterItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:MovieItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : {2}">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewMovieItemTemplate}"/>
          <Binding Source="{StaticResource GridViewMovieItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:MusicItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : {2}">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewMusicItemTemplate}"/>
          <Binding Source="{StaticResource GridViewMusicItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:PictureItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : {2}">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewPictureItemTemplate}"/>
          <Binding Source="{StaticResource GridViewPictureItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataStringProvider x:Key="MediaItemDataStringProvider" Path="SimpleTitle"/>

  <!-- An item list container represented by a standard "Button", scrolling its "ItemLabel" label when focused -->
  <Style x:Key="MediaItemContainerStyle" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Style="{ThemeResource ButtonWideGlassStyle}"
              Command="{DynamicResource ResourceKey=Menu_Command}"
              IsEnabled="{Binding Enabled}" SetFocus="{Binding Path=Selected,Mode=OneTime}">
            <Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
              </Trigger>
            </Button.Triggers>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MediaItemsListListViewStyle" BasedOn="{ThemeResource ContentsMenuListViewStyle}">
    <Setter Property="ItemTemplate"/>
    <!-- Don't inherit the ItemTemplate from ContentsMenuListViewStyle - It should remain null to make the SkinEngine choose an appropriate template -->
    <Setter Property="DataStringProvider" Value="{ThemeResource MediaItemDataStringProvider}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource MediaItemContainerStyle}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <ScrollViewer CanContentScroll="True" Margin="5"
              HorizontalScrollBarVisibility="Disabled" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <BindingSetter Property="ItemsPanel">
      <BindingSetter.BindingWrapper>
        <BindingWrapper>
          <BindingWrapper.Binding>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : {2}">
              <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
              <Binding>
                <Binding.Source>
                  <ItemsPanelTemplate>
                    <VirtualizingStackPanel x:Name="ListItemsHost" IsItemsHost="True"/>
                  </ItemsPanelTemplate>
                </Binding.Source>
              </Binding>
              <Binding>
                <Binding.Source>
                  <ItemsPanelTemplate>
                    <WrapPanel x:Name="GridItemsHost" IsItemsHost="True"/>
                  </ItemsPanelTemplate>
                </Binding.Source>
              </Binding>
            </MultiBinding>
          </BindingWrapper.Binding>
        </BindingWrapper>
      </BindingSetter.BindingWrapper>
    </BindingSetter>
  </Style>
</ResourceDictionary>
